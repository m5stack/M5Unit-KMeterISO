;-----------------------------------------------------------------------
; M5Unit-KmeterISO
; For UnitTest and examples (Using M5UnitUnified)
;-----------------------------------------------------------------------
[platformio]

[env]
build_flags =-Wall -Wextra -Wreturn-local-addr -Werror=format -Werror=return-local-addr
lib_ldf_mode = deep
test_framework = googletest
test_build_src = true
lib_deps=m5stack/M5Unified
  https://github.com/m5stack/M5Utility#develop
  https://github.com/m5stack/M5HAL#develop
  https://github.com/m5stack/M5UnitUnified#develop

; --------------------------------
[m5base]
monitor_speed = 115200
monitor_filters = esp32_exception_decoder, time
upload_speed = 1500000
test_speed = 115200
test_ignore= native/*

[Core]
extends = m5base
board = m5stack-grey
;m5stack-core-esp32-16M ;;6.8.0 or later
;m5stack-core-esp32
lib_deps = ${env.lib_deps}

[Core2]
extends = m5base
board = m5stack-core2
lib_deps = ${env.lib_deps}

[CoreS3]
extends = m5base
board = m5stack-cores3
lib_deps = ${env.lib_deps}

[Fire]
extends = m5base
board = m5stack-fire
lib_deps = ${env.lib_deps}

[StampS3]
;include M5Capsule
extends = m5base
board = m5stack-stamps3
lib_deps = ${env.lib_deps}

[Dial]
extends = m5base
board = m5stack-stamps3
lib_deps = ${env.lib_deps}
  m5stack/M5Dial

[AtomS3]
extends = m5base
board = m5stack-atoms3
lib_deps = ${env.lib_deps}

; Using ./boards/m5stack-nanoc6.json
[NanoC6]
extends = m5base
board = m5stack-nanoc6
platform = https://github.com/platformio/platform-espressif32.git
platform_packages =
	platformio/framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git
	platformio/framework-arduinoespressif32-libs @ https://github.com/espressif/esp32-arduino-libs.git#idf-release/v5.1
board_build.partitions = default.csv
lib_deps = ${env.lib_deps} 

[StickCPlus]
extends = m5base
board = m5stick-c
lib_deps = ${env.lib_deps}

[Paper]
extends = m5base
board = m5stack-fire
; Using M5Fire instead of the M5Paper(Noting...)
lib_deps = ${env.lib_deps}

[sdl]
build_flags = -O3 -xc++ -std=c++14 -lSDL2 
  -arch arm64                                ; for arm mac
  -I"/usr/local/include/SDL2"                ; for intel mac homebrew SDL2
  -L"/usr/local/lib"                         ; for intel mac homebrew SDL2
  -I"${sysenv.HOMEBREW_PREFIX}/include/SDL2" ; for arm mac homebrew SDL2
  -L"${sysenv.HOMEBREW_PREFIX}/lib"          ; for arm mac homebrew SDL2
platform = native
test_filter= native/*
test_ignore= embedded/*
lib_deps = ${env.lib_deps} 

; --------------------------------
;Choose framework
[arduino_latest]
platform = espressif32 @ 6.8.1
framework = arduino

[arduino_6_6_0]
platform = espressif32 @ 6.6.0
framework = arduino

[arduino_6_0_1]
platform = espressif32 @ 6.0.1
framework = arduino

[arduino_5_4_0]
platform = espressif32 @ 5.4.0
framework = arduino

[arduino_4_4_0]
platform = espressif32 @ 4.4.0
framework = arduino

;[arduino_3_5_0]
;platform = espressif32 @ 3.5.0
;framework = arduino

[esp-idf]
platform = espressif32 @ 6.8.1
framework = espidf

; --------------------------------
;Choose build options
[option_release]
build_type=release
build_flags = ${env.build_flags}   
  -DCORE_DEBUG_LEVEL=3
  -DLOG_LOCAL_LEVEL=3
  -DAPP_LOG_LEVEL=3
  -DM5_LOG_LEVEL=3

[option_log]
build_type=release
build_flags = ${env.build_flags} 
  -DCORE_DEBUG_LEVEL=5
  -DLOG_LOCAL_LEVEL=5
  -DAPP_LOG_LEVEL=5

[option_debug]
build_type=debug
build_flags = ${env.build_flags} 
  -DCORE_DEBUG_LEVEL=5
  -DLOG_LOCAL_LEVEL=5
  -DAPP_LOG_LEVEL=5
  -DDEBUG

[option_map]
build_type=release
build_flags = ${env.build_flags} 
  -DCORE_DEBUG_LEVEL=3
  -DLOG_LOCAL_LEVEL=3
  -DAPP_LOG_LEVEL=3
  -DM5_LOG_LEVEL=0
  -Wl,-Map,output.map

; Require at leaset C++14 after 1.13.0 
[test_fw]
lib_deps = google/googletest@1.12.1

; --------------------------------
; UnitTest
; --------------------------------
[env:test_UnitKmeterISO_Core]
extends=Core, option_release, arduino_latest
lib_deps = ${Core.lib_deps} 
  ${test_fw.lib_deps}
test_filter= embedded/test_kmeterISO

[env:test_UnitKmeterISO_Core2]
extends=Core2, option_release, arduino_latest
lib_deps = ${Core2.lib_deps} 
  ${test_fw.lib_deps}
test_filter= embedded/test_kmeterISO

[env:test_UnitKmeterISO_CoreS3]
extends=CoreS3, option_release, arduino_latest
lib_deps = ${CoreS3.lib_deps} 
  ${test_fw.lib_deps}
test_filter= embedded/test_kmeterISO

[env:test_UnitKmeterISO_Fire]
extends=Fire, option_release, arduino_latest
lib_deps = ${Fire.lib_deps} 
  ${test_fw.lib_deps}
test_filter= embedded/test_kmeterISO

[env:test_UnitKmeterISO_StampS3]
extends=StampS3, option_release, arduino_latest
lib_deps = ${StampS3.lib_deps} 
  ${test_fw.lib_deps}
test_filter= embedded/test_kmeterISO

[env:test_UnitKmeterISO_Dial]
extends=Dial, option_release, arduino_latest
lib_deps = ${Dial.lib_deps} 
  ${test_fw.lib_deps}
test_filter= embedded/test_kmeterISO

[env:test_UnitKmeterISO_AtomS3]
extends=AtomS3, option_release, arduino_latest
lib_deps = ${AtomS3.lib_deps} 
  ${test_fw.lib_deps}
test_filter= embedded/test_kmeterISO

[env:test_UnitKmeterISO_NanoC6]
extends=NanoC6, option_release, arduino_latest
lib_deps = ${NanoC6.lib_deps}
  ${test_fw.lib_deps} 
test_filter= embedded/test_kmeterISO

[env:test_UnitKmeterISO_StickCPlus]
extends=StickCPlus, option_release, arduino_latest
lib_deps = ${StickCPlus.lib_deps} 
  ${test_fw.lib_deps} 
test_filter= embedded/test_kmeterISO

[env:test_UnitKmeterISO_Paper]
extends=Paper, option_release, arduino_latest
lib_deps = ${Paper.lib_deps} 
  ${test_fw.lib_deps} 
test_filter= embedded/test_kmeterISO

; --------------------------------
;Examples by M5UnitUnified
; --------------------------------
;PlotToSerial
[env:PlotToSerial_Core_Arduino_latest]
extends=Core, option_release, arduino_latest
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>

[env:PlotToSerial_Core_Arduino_5_4_0]
extends=Core, option_release, arduino_5_4_0
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>

[env:PlotToSerial_Core_Arduino_4_4_0]
extends=Core, option_release, arduino_5_4_0
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>

;[env:PlotToSerial_Core_Arduino350]
;extends=m5base, option_release, arduino_3_5_0
;board = m5stack-grey
;lib_deps = ${env.lib_deps}
;build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>

;; Waiting for M5HAL to support ESP-IDF
;[env:PlotToSerial_Core_espidf]
;extends=Core, option_release, esp-idf
;build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>
;build_flags = ${env.build_flags} ${option_release.build_flags} -DUSING_M5HAL

[env:PlotToSerial_Core2_Arduino_latest]
extends=Core2, option_release, arduino_latest
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>

[env:PlotToSerial_Core2_Arduino_5_4_0]
extends=Core2, option_release, arduino_5_4_0
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>

[env:PlotToSerial_Core2_Arduino_4_4_0]
extends=Core2, option_release, arduino_4_4_0
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>

[env:PlotToSerial_CoreS3_Arduino_latest]
extends=CoreS3, option_release, arduino_latest
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>

[env:PlotToSerial_StampS3_Arduino_latest]
extends=StampS3, option_release, arduino_latest
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>

[env:PlotToSerial_AtomS3_Arduino_latest]
extends=AtomS3, option_release, arduino_latest
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>

[env:PlotToSerial_Dial_Arduino_latest]
extends=Dial, option_release, arduino_latest
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>

[env:PlotToSerial_NanoC6_Arduino_latest]
extends=NanoC6, option_release, arduino_latest
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>

[env:PlotToSerial_StickCPlus_Arduino_latest]
extends=StickCPlus, option_release, arduino_latest
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>

[env:PlotToSerial_Paper_Arduino_latest]
extends=Paper, option_release, arduino_latest
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>

[env:PlotToSerial_Fire_Arduino_latest]
extends=Fire, option_release, arduino_latest
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>

[env:PlotToSerial_Fire_Arduino_5_4_0]
extends=Fire, option_release, arduino_5_4_0
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>

[env:PlotToSerial_Fire_Arduino_4_4_0]
extends=Fire, option_release, arduino_4_4_0
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/UnitUnified/PlotToSerial>
